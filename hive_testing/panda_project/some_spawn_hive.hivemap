Hivemap (
  hives = HiveNodeArray (
    HiveNode (
      identifier = 'convert',
      import_path = 'dragonfly.convert.Convert',
      position = Coordinate2D (
        x = -231.0,
        y = -268.0,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'to_data_type',
          data_type = 'tuple',
          value = "('float',)",
        ),
        InstanceParameter (
          identifier = 'conversion',
          data_type = 'str',
          value = 'duck',
        ),
        InstanceParameter (
          identifier = 'from_data_type',
          data_type = 'tuple',
          value = "('int',)",
        ),
        InstanceParameter (
          identifier = 'mode',
          data_type = 'str',
          value = 'pull',
        ),
      ),
      args = InstanceParameterArray (
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'compose',
      import_path = 'dragonfly.transform.vector.Compose',
      position = Coordinate2D (
        x = -25.0,
        y = -165.0,
      ),
      meta_args = InstanceParameterArray (
      ),
      args = InstanceParameterArray (
      ),
      folded_pins = StringArray (
        'z',
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'count',
      import_path = 'dragonfly.logic.Count',
      position = Coordinate2D (
        x = -336.0,
        y = -279.0,
      ),
      meta_args = InstanceParameterArray (
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'start_value',
          data_type = 'int',
          value = '0',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'convert_1',
      import_path = 'dragonfly.convert.Convert',
      position = Coordinate2D (
        x = -224.0,
        y = -84.75,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'to_data_type',
          data_type = 'tuple',
          value = "('float',)",
        ),
        InstanceParameter (
          identifier = 'conversion',
          data_type = 'str',
          value = 'duck',
        ),
        InstanceParameter (
          identifier = 'mode',
          data_type = 'str',
          value = 'pull',
        ),
        InstanceParameter (
          identifier = 'from_data_type',
          data_type = 'tuple',
          value = "('int',)",
        ),
      ),
      args = InstanceParameterArray (
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'd_press',
      import_path = 'dragonfly.io.Keyboard',
      position = Coordinate2D (
        x = -505.0,
        y = -333.0,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'mode',
          data_type = 'str',
          value = 'single key',
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'key',
          data_type = 'str',
          value = 'd',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'op',
      import_path = 'dragonfly.op.Op',
      position = Coordinate2D (
        x = -128.0,
        y = -261.0,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'operator',
          data_type = 'str',
          value = '*',
        ),
        InstanceParameter (
          identifier = 'data_type',
          data_type = 'tuple',
          value = "('float',)",
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'default_value',
          data_type = 'int',
          value = '0',
        ),
      ),
      folded_pins = StringArray (
        'b',
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'move_0',
      import_path = 'dragonfly.entity.Move',
      position = Coordinate2D (
        x = 21.842105263157904,
        y = 19.10526315789474,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'coordinate_system',
          data_type = 'str',
          value = 'relative',
        ),
        InstanceParameter (
          identifier = 'bound',
          data_type = 'bool',
          value = 'True',
        ),
      ),
      args = InstanceParameterArray (
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'z',
      import_path = 'dragonfly.std.Variable',
      position = Coordinate2D (
        x = 0.0,
        y = 0.0,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'data_type',
          data_type = 'tuple',
          value = "('float',)",
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'start_value',
          data_type = 'float',
          value = '0.0',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'this',
      import_path = 'dragonfly.entity.This',
      position = Coordinate2D (
        x = -353.0,
        y = 205.26315789473688,
      ),
      meta_args = InstanceParameterArray (
      ),
      args = InstanceParameterArray (
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'b',
      import_path = 'dragonfly.std.Variable',
      position = Coordinate2D (
        x = -21.0,
        y = -17.0,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'data_type',
          data_type = 'tuple',
          value = "('float',)",
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'start_value',
          data_type = 'float',
          value = '0.1',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'op_1',
      import_path = 'dragonfly.op.Op',
      position = Coordinate2D (
        x = -121.0,
        y = -77.75,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'operator',
          data_type = 'str',
          value = '*',
        ),
        InstanceParameter (
          identifier = 'data_type',
          data_type = 'tuple',
          value = "('float',)",
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'default_value',
          data_type = 'int',
          value = '0',
        ),
      ),
      folded_pins = StringArray (
        'b',
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'b_0',
      import_path = 'dragonfly.std.Variable',
      position = Coordinate2D (
        x = -31.0,
        y = 232.5,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'data_type',
          data_type = 'tuple',
          value = "('float',)",
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'start_value',
          data_type = 'float',
          value = '0.1',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'w_press',
      import_path = 'dragonfly.io.Keyboard',
      position = Coordinate2D (
        x = -483.42105263157896,
        y = -124.84210526315792,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'mode',
          data_type = 'str',
          value = 'single key',
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'key',
          data_type = 'str',
          value = 'w',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'count_1',
      import_path = 'dragonfly.logic.Count',
      position = Coordinate2D (
        x = -329.0,
        y = -95.75,
      ),
      meta_args = InstanceParameterArray (
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'start_value',
          data_type = 'int',
          value = '0',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'tick',
      import_path = 'dragonfly.event.Tick',
      position = Coordinate2D (
        x = -486.0,
        y = 87.0,
      ),
      meta_args = InstanceParameterArray (
      ),
      args = InstanceParameterArray (
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'a_press',
      import_path = 'dragonfly.io.Keyboard',
      position = Coordinate2D (
        x = -483.0,
        y = -215.0,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'mode',
          data_type = 'str',
          value = 'single key',
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'key',
          data_type = 'str',
          value = 'a',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 's_press',
      import_path = 'dragonfly.io.Keyboard',
      position = Coordinate2D (
        x = -484.0,
        y = -44.0,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'mode',
          data_type = 'str',
          value = 'single key',
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'key',
          data_type = 'str',
          value = 's',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
  ),
  bees = BeeNodeArray (
  ),
  helpers = HelperNodeArray (
  ),
  connections = ConnectionArray (
    Connection (
      from_node = 'convert',
      output_name = 'value_out',
      to_node = 'op',
      input_name = 'a',
      is_trigger = False,
    ),
    Connection (
      from_node = 'compose',
      output_name = 'result',
      to_node = 'move_0',
      input_name = 'displacement',
      is_trigger = False,
    ),
    Connection (
      from_node = 'count',
      output_name = 'count_out',
      to_node = 'convert',
      input_name = 'value_in',
      is_trigger = False,
    ),
    Connection (
      from_node = 'convert_1',
      output_name = 'value_out',
      to_node = 'op_1',
      input_name = 'a',
      is_trigger = False,
    ),
    Connection (
      from_node = 'd_press',
      output_name = 'on_pressed',
      to_node = 'count',
      input_name = 'increment',
      is_trigger = True,
    ),
    Connection (
      from_node = 'd_press',
      output_name = 'on_released',
      to_node = 'count',
      input_name = 'decrement',
      is_trigger = True,
    ),
    Connection (
      from_node = 'op',
      output_name = 'result',
      to_node = 'compose',
      input_name = 'x',
      is_trigger = False,
    ),
    Connection (
      from_node = 'z',
      output_name = 'value_out',
      to_node = 'compose',
      input_name = 'z',
      is_trigger = False,
    ),
    Connection (
      from_node = 'this',
      output_name = 'entity',
      to_node = 'move_0',
      input_name = 'other_entity',
      is_trigger = False,
    ),
    Connection (
      from_node = 'b',
      output_name = 'value_out',
      to_node = 'op',
      input_name = 'b',
      is_trigger = False,
    ),
    Connection (
      from_node = 'op_1',
      output_name = 'result',
      to_node = 'compose',
      input_name = 'y',
      is_trigger = False,
    ),
    Connection (
      from_node = 'b_0',
      output_name = 'value_out',
      to_node = 'op_1',
      input_name = 'b',
      is_trigger = False,
    ),
    Connection (
      from_node = 'w_press',
      output_name = 'on_pressed',
      to_node = 'count_1',
      input_name = 'increment',
      is_trigger = True,
    ),
    Connection (
      from_node = 'w_press',
      output_name = 'on_released',
      to_node = 'count_1',
      input_name = 'decrement',
      is_trigger = True,
    ),
    Connection (
      from_node = 'count_1',
      output_name = 'count_out',
      to_node = 'convert_1',
      input_name = 'value_in',
      is_trigger = False,
    ),
    Connection (
      from_node = 'tick',
      output_name = 'on_tick',
      to_node = 'move_0',
      input_name = 'trig',
      is_trigger = True,
    ),
    Connection (
      from_node = 'a_press',
      output_name = 'on_pressed',
      to_node = 'count',
      input_name = 'decrement',
      is_trigger = True,
    ),
    Connection (
      from_node = 'a_press',
      output_name = 'on_released',
      to_node = 'count',
      input_name = 'increment',
      is_trigger = True,
    ),
    Connection (
      from_node = 's_press',
      output_name = 'on_pressed',
      to_node = 'count_1',
      input_name = 'decrement',
      is_trigger = True,
    ),
    Connection (
      from_node = 's_press',
      output_name = 'on_released',
      to_node = 'count_1',
      input_name = 'increment',
      is_trigger = True,
    ),
  ),
  docstring = 'Moves around a bound hive',
)