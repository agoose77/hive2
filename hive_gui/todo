Parse all hives (just check if inherits from HiveBuilder)
Parse all bees (just check if inherits from Bee)
Parse all parameters (just check if inherits from Parameter)

Control flow: Generic node manager -> Blender node manager

[x]Don't bother inspecting UI on loading, just wipe and re-load
[x]When adding nodes, operator will setup data first then add GUI representation
[x]When copying nodes, GUI will notice was copied and configure #{Instead, we trash and reload}#

Support bees with hives:
    How to connect hives with bees (in GUI and out)
    -> Restructure hive / bee distinction?
        -> Use optional from_socket to_socket in model.BeeConnection?
        -> Account for fact that bee != hivebee, maybe add another layer / more generic setup?


How to fix edit undo?

How to support meta-hives / declarators in GUI?

Use hive.antenna, entry, hook, output to define IO interface

Add ability to inspect built-in node -> if nested hives, recurse to greater and greater depths - open their hivemaps,
                                or generate hivemap, but don't guarantee utility (maybe read only?)

Default all bees internal where possible?

Support internal hivemaps as bees:
    If updated show warning - need to update
        If operator pressed, find connected nodes, remember and disconnect them.
        Recreate node & attempt to recreate connections

Draw docstring inside nodes using draw_buttons - use RuntimeNode.__doc__? - pass to hive.extend, expose using __doc__ or .help() or .info()