Hivemap (
  hives = HiveNodeArray (
    HiveNode (
      identifier = 'dispatch_0',
      import_path = 'dragonfly.event.Dispatch',
      position = Coordinate2D (
        x = 267.7777777777777,
        y = -209.9999999999999,
      ),
      meta_args = InstanceParameterArray (
      ),
      args = InstanceParameterArray (
      ),
      folded_pins = StringArray (
        'event',
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'listener_0',
      import_path = 'dragonfly.event.Listener',
      position = Coordinate2D (
        x = 18.888888888888882,
        y = -167.77777777777771,
      ),
      meta_args = InstanceParameterArray (
      ),
      args = InstanceParameterArray (
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'mode',
          data_type = 'str',
          value = 'leader',
        ),
        InstanceParameter (
          identifier = 'event',
          data_type = 'tuple',
          value = "('some_leader', 'event')",
        ),
      ),
    ),
    HiveNode (
      identifier = 'transistor_0',
      import_path = 'dragonfly.std.Transistor',
      position = Coordinate2D (
        x = 122.22222222222216,
        y = -66.66666666666664,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'data_type',
          data_type = 'tuple',
          value = "('str',)",
        ),
      ),
      args = InstanceParameterArray (
      ),
      folded_pins = StringArray (
        'value',
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'print_0',
      import_path = 'dragonfly.io.Print',
      position = Coordinate2D (
        x = 316.66666666666646,
        y = -67.77777777777776,
      ),
      meta_args = InstanceParameterArray (
      ),
      args = InstanceParameterArray (
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'keyboard_0',
      import_path = 'dragonfly.io.Keyboard',
      position = Coordinate2D (
        x = 46.66666666666664,
        y = -306.6666666666665,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'mode',
          data_type = 'str',
          value = 'single key',
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'key',
          data_type = 'str',
          value = 'W',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'event',
      import_path = 'dragonfly.std.Variable',
      position = Coordinate2D (
        x = 235.5555555555555,
        y = 62.22222222222223,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'data_type',
          data_type = 'tuple',
          value = "('tuple',)",
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'start_value',
          data_type = 'tuple',
          value = "('some_leader', 'event')",
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
    HiveNode (
      identifier = 'value',
      import_path = 'dragonfly.std.Variable',
      position = Coordinate2D (
        x = 0.0,
        y = 0.0,
      ),
      meta_args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'data_type',
          data_type = 'tuple',
          value = "('str',)",
        ),
      ),
      args = InstanceParameterArray (
        InstanceParameter (
          identifier = 'start_value',
          data_type = 'str',
          value = 'Pressed Recv',
        ),
      ),
      folded_pins = StringArray (
      ),
      cls_args = InstanceParameterArray (
      ),
    ),
  ),
  bees = BeeNodeArray (
  ),
  helpers = HelperNodeArray (
  ),
  connections = ConnectionArray (
    Connection (
      from_node = 'listener_0',
      output_name = 'on_event',
      to_node = 'transistor_0',
      input_name = 'trigger',
      is_trigger = True,
    ),
    Connection (
      from_node = 'transistor_0',
      output_name = 'result',
      to_node = 'print_0',
      input_name = 'value_in',
      is_trigger = False,
    ),
    Connection (
      from_node = 'keyboard_0',
      output_name = 'on_pressed',
      to_node = 'dispatch_0',
      input_name = 'trig',
      is_trigger = True,
    ),
    Connection (
      from_node = 'event',
      output_name = 'value',
      to_node = 'dispatch_0',
      input_name = 'event',
      is_trigger = False,
    ),
    Connection (
      from_node = 'value',
      output_name = 'value',
      to_node = 'transistor_0',
      input_name = 'value',
      is_trigger = False,
    ),
  ),
  docstring = 'A basic demo of hivemap code generation.\n\nOne demo is mouse controlled, the other is keyboard controlled',
)